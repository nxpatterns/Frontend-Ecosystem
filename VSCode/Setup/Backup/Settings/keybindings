// Place your key bindings in this file to override the defaults
[
  {
    "key": "F3",
    "command": "toggle",
    "when": "editorTextFocus",
    "args": {
      "id": "toggleCodeLens",
      "value": [
        {
          "diffEditor.codeLens": true,
          "typescript.referencesCodeLens.enabled": true,
          "typescript.referencesCodeLens.showOnAllFunctions": true,
          "javascript.referencesCodeLens.showOnAllFunctions": true,
          "typescript.implementationsCodeLens.enabled": true
        },
        {
          "diffEditor.codeLens": false,
          "typescript.referencesCodeLens.enabled": false,
          "typescript.referencesCodeLens.showOnAllFunctions": false,
          "javascript.referencesCodeLens.showOnAllFunctions": false,
          "typescript.implementationsCodeLens.enabled": false
        }
      ]
    }
  },
  {
    "key": "F6",
    "command": "toggle",
    "when": "editorTextFocus",
    "args": {
      "id": "toggleCodeLens",
      "value": [
        {
          "workbench.activityBar.visible": true
        },
        {
          "workbench.activityBar.visible": false
        }
      ]
    }
  },
  {
    "key": "F10",
    "command": "toggle",
    "when": "editorTextFocus",
    "args": {
      "id": "toggleCodeLens",
      "value": [
        {
          "editor.inlayHints.enabled": "on",
          "typescript.inlayHints.variableTypes.enabled": true,
          "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
          "typescript.inlayHints.parameterTypes.enabled": true,
          "typescript.inlayHints.functionLikeReturnTypes.enabled": true
        },
        {
          "editor.inlayHints.enabled": "offUnlessPressed",
          "typescript.inlayHints.variableTypes.enabled": false,
          "typescript.inlayHints.propertyDeclarationTypes.enabled": false,
          "typescript.inlayHints.parameterTypes.enabled": false,
          "typescript.inlayHints.functionLikeReturnTypes.enabled": false
        }
      ]
    }
  },
  {
    "key": "shift+alt+l",
    "command": "generateTranslation.fromSelectedText"
  },
  {
    "key": "ctrl+alt+l",
    "command": "workbench.action.navigateLast"
  },
  {
    "key": "alt+tab",
    "command": "editor.action.insertSnippet"
  },
  {
    "key": "shift+cmd+i",
    "command": "extension.wrapTag",
    "when": "editorTextFocus"
  },

  {
    "key": "ctrl+shift+alt+l",
    "command": "turboConsoleLog.displayLogMessage"
  },
  {
    "key": "ctrl+shift+b",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+cmd+7",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+t",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "alt+cmd+right",
    "command": "editor.action.inlineSuggest.showNext"
  },
  {
    "key": "alt+cmd+left",
    "command": "editor.action.inlineSuggest.showPrevious"
  },
  {
    "key": "alt+cmd+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+up",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+up",
    "command": "editor.action.inlineSuggest.trigger"
  },
  {
    "key": "ctrl+shift+o",
    "command": "typescriptHero.imports.organize",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+o",
    "command": "-typescriptHero.imports.organize",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+p",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+f12",
    "command": "-editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  }
]
